# Setup Debian Host:
.setupdeb: &setupdeb
  - apt-get update -y -qq && apt-get upgrade -y -qq && apt-get install apt-transport-https -y -qq
  - apt-get install curl wget apt-transport-https gnupg lsb-release -y -qq
  - wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | apt-key add -
  - echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | tee -a /etc/apt/sources.list.d/trivy.list
  - apt-get update -y -qq && apt-get install trivy -y -qq
  - wget https://raw.githubusercontent.com/aquasecurity/trivy/master/contrib/junit.tpl
  - curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
  - echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
  - apt-get update -y -qq && apt-get install docker-ce docker-ce-cli containerd.io -y -qq
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - docker-compose pull || true

# Deny Rules:
.sec_rules:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event' || $CI_PIPELINE_SOURCE == 'push' || $CI_PIPELINE_SOURCE == 'web' || $CI_PIPELINE_SOURCE == 'pipeline'
      when: manual
    - if: $CI_COMMIT_TAG != "null"
      when: never
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - when: manual

variables:
  TOOL_IMAGE: debian:bullseye-slim

trivy-scan-full:
  stage: manual-sec-scan
  image: $TOOL_IMAGE
  variables:
    DOCKER_HOST: unix:///var/run/docker.sock
    DOCKER_TLS_CERTDIR: ""
  when: manual
  before_script:
    - *setupdeb
  script:
    - trivy image --format template --template "@junit.tpl" -o ${CI_PROJECT_NAME}_${CI_PIPELINE_ID}_trivy_report_all.xml $IMAGE
  artifacts:
    paths:
      - ${CI_PROJECT_NAME}_${CI_PIPELINE_ID}_trivy_report_all.xml
    reports:
      junit:
        - ${CI_PROJECT_NAME}_${CI_PIPELINE_ID}_trivy_report_all.xml
    expire_in: 1 month
  allow_failure: true
  rules:
    - !reference [.sec_rules, rules]

trivy-scan-severe:
  stage: manual-sec-scan
  extends: trivy-scan-full
  script:
    - trivy image --severity HIGH,CRITICAL --format template --template "@junit.tpl" -o ${CI_PROJECT_NAME}_${CI_PIPELINE_ID}_trivy_report_high.xml $IMAGE
  artifacts:
    paths:
      - ${CI_PROJECT_NAME}_${CI_PIPELINE_ID}_trivy_report_high.xml
    reports:
      junit:
        - ${CI_PROJECT_NAME}_${CI_PIPELINE_ID}_trivy_report_high.xml
    expire_in: 1 month
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: on_success
    - if: "$CI_COMMIT_TAG != null"
      when: on_success
    - when: manual

all-scan:
  stage: manual-sec-scan
  extends: trivy-scan-full
  before_script:
    - *setupdeb
    - apt-get install bandit vulture nodejs npm -y -qq
    - npm install -g npm-audit-plus
  script:
    # check for potential container CVEs
    - trivy image --format template --template "@junit.tpl" -o ${CI_PROJECT_NAME}_${CI_PIPELINE_ID}_trivy_report.xml $IMAGE
    # do some static analysis
    - bandit -r . | tee ${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_bandit_out.txt || true
    - vulture . | tee ${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_vulture_out.txt || true
    - npm-audit-plus --xml | tee ${CI_PROJECT_NAME}_${CI_PIPELINE_ID}_npm_audit_out.xml || true
  artifacts:
    paths:
      - ${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_vulture_out.txt
      - ${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_bandit_out.txt
      - ${CI_PROJECT_NAME}_${CI_PIPELINE_ID}_npm_audit_out.xml
      - ${CI_PROJECT_NAME}_${CI_PIPELINE_ID}_trivy_report.xml
    reports:
      junit:
        - ${CI_PROJECT_NAME}_${CI_PIPELINE_ID}_npm_audit_out.xml
        - ${CI_PROJECT_NAME}_${CI_PIPELINE_ID}_trivy_report.xml
    expire_in: 1 month
  rules:
    - !reference [.sec_rules, rules]

sec-scan:
  stage: manual-sec-scan
  extends: trivy-scan-full
  when: manual
  before_script:
    - apt-get update -y && apt-get upgrade -y && apt-get install apt-transport-https
    - apt-get install python3-bandit vulture pylint python3-pip -y
  script:
    # do some static analysis
    - bandit -r . | tee ${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_bandit_out.txt || true
    - vulture . | tee ${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_vulture_out.txt || true
  artifacts:
    paths:
      - ${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_vulture_out.txt
      - ${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_bandit_out.txt
    expire_in: 1 month
  rules:
    - !reference [.sec_rules, rules]
